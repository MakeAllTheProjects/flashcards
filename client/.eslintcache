[{"C:\\Users\\geeke\\Dev\\flashcards\\client\\src\\App.js":"1","C:\\Users\\geeke\\Dev\\flashcards\\client\\src\\components\\pages\\card-library\\Card.jsx":"2","C:\\Users\\geeke\\Dev\\flashcards\\client\\src\\components\\header\\Menu.jsx":"3","C:\\Users\\geeke\\Dev\\flashcards\\client\\src\\components\\pages\\landing\\ForgottenPasswordForm.jsx":"4"},{"size":2674,"mtime":1613447379638,"results":"5","hashOfConfig":"6"},{"size":5377,"mtime":1674285076099,"results":"7","hashOfConfig":"6"},{"size":1043,"mtime":1613447380105,"results":"8","hashOfConfig":"6"},{"size":1404,"mtime":1674289798124,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"j7ppwh",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\geeke\\Dev\\flashcards\\client\\src\\App.js",["19","20","21","22"],"C:\\Users\\geeke\\Dev\\flashcards\\client\\src\\components\\pages\\card-library\\Card.jsx",["23"],"C:\\Users\\geeke\\Dev\\flashcards\\client\\src\\components\\header\\Menu.jsx",["24","25","26","27","28"],"C:\\Users\\geeke\\Dev\\flashcards\\client\\src\\components\\pages\\landing\\ForgottenPasswordForm.jsx",["29","30"],"import React, { useState } from 'react'\r\n\r\nimport './ForgottenPasswordForm.scss'\r\n\r\nexport default function ForgottenPasswordForm() {\r\n  const [email, setEmail] = useState('')\r\n  const [showError, setShowError] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [isSending, setIsSending] = useState(false)\r\n  const [isSent, setIsSent] = useState(false)\r\n\r\n  const handleSendRecoveryEmail = (e) => {\r\n    e.preventDefault()\r\n\r\n    setIsSending(true)\r\n\r\n    setTimeout(() => {\r\n      setIsSending(false)\r\n      setIsSent(true)\r\n    }, 3000)\r\n  }\r\n\r\n  return (\r\n    <form\r\n      className=\"forgotten-password\"\r\n      onSubmit={e => handleSendRecoveryEmail(e)}\r\n    >\r\n      <p>Enter the email associated with your account to reset your password.</p>\r\n\r\n      <input\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={e => setEmail(e.target.value)}\r\n        placeholder=\"email@email.com\"\r\n        required\r\n      />\r\n\r\n      <input\r\n        className={!isSending && !isSent ? \"send-button\" : \"send-button disabled\"}\r\n        type=\"submit\"\r\n        value=\"Send\"\r\n        disabled={isSending || isSent}\r\n      />\r\n\r\n      {showError && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n      {isSending && <p className=\"status-message\">Sending recovery email...</p>}\r\n      {isSent && <p className=\"status-message\">Recovery email sent.</p>}\r\n    </form>\r\n  )\r\n}\r\n",{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":13},{"ruleId":"31","severity":1,"message":"35","line":30,"column":20,"nodeType":"33","messageId":"34","endLine":30,"endColumn":29},{"ruleId":"36","severity":1,"message":"37","line":46,"column":6,"nodeType":"38","endLine":46,"endColumn":15,"suggestions":"39"},{"ruleId":"36","severity":1,"message":"40","line":52,"column":6,"nodeType":"38","endLine":52,"endColumn":19,"suggestions":"41"},{"ruleId":"31","severity":1,"message":"42","line":2,"column":39,"nodeType":"33","messageId":"34","endLine":2,"endColumn":48},{"ruleId":"31","severity":1,"message":"42","line":1,"column":29,"nodeType":"33","messageId":"34","endLine":1,"endColumn":38},{"ruleId":"31","severity":1,"message":"43","line":2,"column":10,"nodeType":"33","messageId":"34","endLine":2,"endColumn":14},{"ruleId":"31","severity":1,"message":"44","line":12,"column":10,"nodeType":"33","messageId":"34","endLine":12,"endColumn":15},{"ruleId":"31","severity":1,"message":"45","line":13,"column":9,"nodeType":"33","messageId":"34","endLine":13,"endColumn":16},{"ruleId":"31","severity":1,"message":"35","line":13,"column":18,"nodeType":"33","messageId":"34","endLine":13,"endColumn":27},{"ruleId":"31","severity":1,"message":"46","line":7,"column":21,"nodeType":"33","messageId":"34","endLine":7,"endColumn":33},{"ruleId":"31","severity":1,"message":"47","line":8,"column":24,"nodeType":"33","messageId":"34","endLine":8,"endColumn":39},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'setCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.user.username'. Either include it or remove the dependency array.","ArrayExpression",["48"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["49"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'state' is assigned a value but never used.","'cookies' is assigned a value but never used.","'setShowError' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.",{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},"Update the dependencies array to be: [cookies, state.user.username]",{"range":"54","text":"55"},"Update the dependencies array to be: [history, state.token]",{"range":"56","text":"57"},[1577,1586],"[cookies, state.user.username]",[1671,1684],"[history, state.token]"]